stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
output$table2 <- renderDataTable({
dataframe()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
output$table2 <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
output$table2 <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
output$table2 <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!",
dataTableOutput("table2")),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
output$table <- renderDataTable({
imported_table()
})
output$table2 <- renderDataTable({
imported_table()
})
}
shinyApp(ui, server)
list(df1=data.frame(a=(1,2),b=("test","not")))
list(df1=data.frame(a=c(1,2),b=c("test","not")))
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!"#,
#dataTableOutput("table2")
),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
all_dataframes <- list(raw=imported_table()) #Add to this list any new created dataframe in the "tidy it" tab.
output$table <- renderDataTable({
all_dataframes$raw
})
# output$table2 <- renderDataTable({
#   imported_table()
# })
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!"#,
#dataTableOutput("table2")
),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
reactive(
all_dataframes <- list(raw=imported_table()) #Add to this list any new created dataframe in the "tidy it" tab.
)
output$table <- renderDataTable({
all_dataframes$raw
})
# output$table2 <- renderDataTable({
#   imported_table()
# })
}
shinyApp(ui, server)
library(shiny)
library(shinythemes)
#Sourcing module files
source("upload_modules.R")
ui <- shinyUI(navbarPage(
"Tidy & Visualize",
tabPanel("File upload",
csvFileInput("datafile", "User data (.csv format)")
),
tabPanel("Tidy it!"#,
#dataTableOutput("table2")
),
tabPanel("Visualize it!"),
theme = shinytheme("darkly")
))
server <- function(input, output, session) {
imported_table <- callModule(csvFile, "datafile",
stringsAsFactors = FALSE)
reactive(
all_dataframes <- list(raw=imported_table()) #Add to this list any new created dataframe in the "tidy it" tab.
)
output$table <- renderDataTable({
all_dataframes()$raw
})
# output$table2 <- renderDataTable({
#   imported_table()
# })
}
shinyApp(ui, server)
ls?
)
?ls
data.frame()
#creating a global list of dataframes
all_dfs <- list(raw=data.frame())
all_dfs
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
all_dfs$raw <- c(test=c("no","yes"))
all_dfs
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
all_dfs
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
getwd()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
names(all_dfs)
all_dfs[["raw"]]
all_dfs[["tidied"]]
shiny::runApp()
shiny::runApp()
shiny::runApp()
all_dfs["tidied"]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
all_dfs
all_dfs$raw
all_dfs$raw()
as.dataframe(all_dfs$raw())
as.dataframe(all_dfs$raw
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(ggplot2)
library(ggplot2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runGitHub("bravemaster3/tidy_and_visualize", username = getOption("github.bravemaster3"), ref = "master",
subdir = NULL, port = NULL,
launch.browser = getOption("shiny.launch.browser", interactive()))
shiny::runApp()
plot <- function(data,x,y){
ggplot(data,aes(x=x,y=y))
}
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(plotly)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
?isolate
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(shiny)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
remotes::install_github("r-world-devs/shinyGizmo", ref = "dev")
